name: Rust Build and Test

on:
  workflow_dispatch:

jobs:
  build:
    name: Build and Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        include:
          - os: ubuntu-24.04
            sub_packages: '["nvcc", "cudart"]'
          - os: windows-2022
            sub_packages: '["nvcc", "cudart", "visual_studio_integration"]'
          - os: macos-13
          - os: macos-14

    defaults:
      run:
        working-directory: simulation

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Cargo Registry and Git Index
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/simulation/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo Target
        uses: actions/cache@v3
        with:
          path: simulation/target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/simulation/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install CUDA Toolkit
        if: ${{ !startsWith(matrix.os, 'macos') }}
        uses: Jimver/cuda-toolkit@v0.2.18
        with:
          cuda: '12.5.1'
          method: 'network'
          sub-packages: ${{ matrix.sub_packages }}
          non-cuda-sub-packages: '[]'

      - name: Install CMake
        uses: lukka/get-cmake@v3.26.0
        with:
          cmakeVersion: "3.26.0"

      - name: Build
        uses: clechasseur/rs-cargo@v2
        with:
          command: build
          args: --verbose
          working-directory: simulation

      - name: Run Tests
        uses: clechasseur/rs-cargo@v2
        with:
          command: test
          args: --verbose
          working-directory: simulation

      - name: Lint (cargo check)
        uses: clechasseur/rs-cargo@v2
        with:
          command: check
          args: --verbose
          working-directory: simulation

      - name: Clippy
        uses: clechasseur/rs-cargo@v2
        with:
          command: clippy
          args: -- -D warnings
          working-directory: simulation
